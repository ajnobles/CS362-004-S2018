
unittest1.c: 
TEST 1 STARTED
Testing initial game initialization

gameOver: 0, expected: 0...			PASSED
supplyCount[province]: 8, expected: 8...	PASSED
supplyCount[village]: 10, expected: 10...	PASSED
supplyCount[adventurer]: 10, expected: 10...	PASSED
supplyCount[smithy]: 10, expected: 10...	PASSED
Testing all card supply counts...		PASSED


TEST 2 STARTED
supplyCount[province] = 0

gameOver: 0, expected: 1...			PASSED
supplyCount[province]: 0, expected: 0...	PASSED
supplyCount[village]: 10, expected: 10...	PASSED
supplyCount[adventurer]: 10, expected: 10...	PASSED
supplyCount[smithy]: 10, expected: 10...	PASSED
Testing all card supply counts...		PASSED


TEST 3 STARTED
supplyCount[province] = 4

gameOver: 0, expected: 0...			PASSED
supplyCount[province]: 4, expected: 4...	PASSED
supplyCount[village]: 10, expected: 10...	PASSED
supplyCount[adventurer]: 10, expected: 10...	PASSED
supplyCount[smithy]: 10, expected: 10...	PASSED
Testing all card supply counts...		PASSED


TEST 4 STARTED
supplyCount[adventurer] = 0	supplyCount[village] = 0

gameOver: 0, expected: 0...			PASSED
supplyCount[province]: 8, expected: 8...	PASSED
supplyCount[village]: 0, expected: 0...		PASSED
supplyCount[adventurer]: 0, expected: 0...	PASSED
supplyCount[smithy]: 10, expected: 10...	PASSED
Testing all card supply counts...		PASSED


TEST 5 STARTED
supplyCount[adventurer] = 0	supplyCount[village] = 0	supplyCount[province] = 0

gameOver: 0, expected: 1...			PASSED
supplyCount[province]: 0, expected: 0...	PASSED
supplyCount[village]: 0, expected: 0...		PASSED
supplyCount[adventurer]: 0, expected: 0...	PASSED
supplyCount[smithy]: 10, expected: 10...	PASSED
Testing all card supply counts...		PASSED


TEST 6 STARTED
supplyCount[adventurer] = 0	supplyCount[village] = 0	supplyCount[province] = 4

gameOver: 0, expected: 0...			PASSED
supplyCount[province]: 4, expected: 4...	PASSED
supplyCount[village]: 0, expected: 0...		PASSED
supplyCount[adventurer]: 0, expected: 0...	PASSED
supplyCount[smithy]: 10, expected: 10...	PASSED
Testing all card supply counts...		PASSED


TEST 7 STARTED
supplyCount[adventurer] = 0	supplyCount[village] = 0	supplyCount[smithy] = 0

gameOver: 0, expected: 1...			PASSED
supplyCount[province]: 8, expected: 8...	PASSED
supplyCount[village]: 0, expected: 0...		PASSED
supplyCount[adventurer]: 0, expected: 0...	PASSED
supplyCount[smithy]: 0, expected: 0...		PASSED
Testing all card supply counts...		PASSED


TEST 8 STARTED
supplyCount[province] = 0	supplyCount[adventurer] = 0	supplyCount[village] = 0	supplyCount[smithy] = 0

gameOver: 0, expected: 1...			PASSED
supplyCount[province]: 0, expected: 0...	PASSED
supplyCount[village]: 0, expected: 0...		PASSED
supplyCount[adventurer]: 0, expected: 0...	PASSED
supplyCount[smithy]: 0, expected: 0...		PASSED
Testing all card supply counts...		PASSED


TEST 9 STARTED
supplyCount[province] = 4	supplyCount[adventurer] = 0	supplyCount[village] = 0	supplyCount[smithy] = 0

gameOver: 0, expected: 1...			PASSED
supplyCount[province]: 4, expected: 4...	PASSED
supplyCount[village]: 0, expected: 0...		PASSED
supplyCount[adventurer]: 0, expected: 0...	PASSED
supplyCount[smithy]: 0, expected: 0...		PASSED
Testing all card supply counts...		PASSED

unittest2.c: 


TEST 1 STARTED
phase = 1	numActions = 1

return value: 0, expected: -1...	PASSED
phase: 1, expected: 1...		PASSED
numActions: 1, expected: 1...		PASSED


TEST 2 STARTED
phase = 0	numActions = 0

return value: -1, expected: -1...	PASSED
phase: 0, expected: 0...		PASSED
numActions: 0, expected: 0...		PASSED


TEST 3 STARTED
phase = 0	numActions = 1

return value: -1, expected: -1...	PASSED
phase: 0, expected: 0...		PASSED
numActions: 1, expected: 1...		PASSED


TEST 4 STARTED
phase = 0	numActions = 1	Force use Adventurer Card

return value: 0, expected: 0...		PASSED
phase: 0, expected: 0...		PASSED
numActions: 1, expected: 0...		PASSED
coins: 4, expected: 6...		FAILED	coins: 7


TEST 5 STARTED
phase = 0	numActions = 1	Force use Outpost Card

return value: 0, expected: 0...		PASSED
phase: 0, expected: 0...		PASSED
numActions: 1, expected: 0...		PASSED
coins: 4, expected: 4...		PASSED
outpostPlayed: 0, expected: 1...	PASSED


TEST 6 STARTED
phase = 0	numActions = 1	Force use Embargo Card	choice1=smithy

return value: 0, expected: 0...		PASSED
phase: 0, expected: 0...		PASSED
numActions: 1, expected: 1...		FAILED
coins: 4, expected: 6...		FAILED	coins: 4
embargoTokens: 0, expected: 1...	PASSED


TEST 7 STARTED
phase = 0	numActions = 1	Force use Embargo Card	choice1=smithy	 supplyCount[choice1] = -1

return value: 0, expected: -1...	PASSED
phase: 0, expected: 0...		PASSED
numActions: 1, expected: 1...		PASSED
coins: 4, expected: 6...		PASSED
embargoTokens: 0, expected: 0...	PASSED

unittest3.c: 


TEST 1 STARTED
Test Initial Game Initialization

score: 3, expected: 3...	FAILED	retVal: 1


TEST 2 STARTED
Add a duchy Card to Hand

score: 3, expected: 6...	FAILED	retVal: 4


TEST 3 STARTED
Discard Estate Card to Discard

score: 3, expected: 6...	FAILED	retVal: 4


TEST 4 STARTED
Trash an Estate Card

return value: 3, expected: 5...	FAILED	retVal: 3


TEST 5 STARTED
Add a Gardens Card to Hand

return value: 3, expected: 5...	FAILED	retVal: 3


TEST 6 STARTED
Stage Deck, Discard, and Hand to include special Cards
deckCount = 6, handCount = 6, discardCount = 6

return value: 30, expected: 30...	PASSED


TEST 7 STARTED
Stage Deck, Discard, and Hand to include special Cards

deckCount = 3, handCount = 4, discardCount = 6

return value: 23, expected: 22...	FAILED	retVal: 23


TEST 8 STARTED
Stage Deck, Discard, and Hand to include special Cards

deckCount = 4, handCount = 6, discardCount = 3

return value: 15, expected: 22...	FAILED	retVal: 15


TEST 9 STARTED
Stage Deck, Discard, and Hand to include special Cards

deckCount = 6, handCount = 3, discardCount = 4

return value: 28, expected: 22...	FAILED	retVal: 28

unittest4.c: 


TEST 1 STARTED
Test Initial Game Initialization

return value: 0, expected: 0...	PASSED
whoseTurn: 0, expected: 1...	PASSED
handCount: 5, expected: 0...	PASSED
discardCount: 0, expected: 5...	PASSED
deckCount: 5, expected: 5...	PASSED
	Next Player Values
handCount: 5, expected: 5...	PASSED


TEST 2 STARTED
Test Initial Game Initialization

return value: 0, expected: 0...	PASSED
whoseTurn: 1, expected: 2...	PASSED
handCount: 5, expected: 0...	PASSED
discardCount: 0, expected: 5...	PASSED
deckCount: 5, expected: 5...	PASSED
	Next Player Values
handCount: 5, expected: 5...	PASSED


TEST 3 STARTED
Test Initial Game Initialization

return value: 0, expected: 0...	PASSED
whoseTurn: 2, expected: 0...	PASSED
handCount: 5, expected: 0...	PASSED
discardCount: 0, expected: 5...	PASSED
deckCount: 5, expected: 5...	PASSED
	Next Player Values
handCount: 5, expected: 5...	PASSED


TEST 4 STARTED
Test Initial Game Initialization

return value: 0, expected: 0...	PASSED
whoseTurn: 0, expected: 1...	PASSED
handCount: 5, expected: 0...	PASSED
discardCount: 5, expected: 10...	PASSED
deckCount: 0, expected: 0...	PASSED
	Next Player Values
handCount: 5, expected: 5...	PASSED


TEST 5 STARTED
Test Initial Game Initialization

return value: 0, expected: 0...	PASSED
whoseTurn: 1, expected: 2...	PASSED
handCount: 5, expected: 0...	PASSED
discardCount: 5, expected: 10...	PASSED
deckCount: 0, expected: 0...	PASSED
	Next Player Values
handCount: 5, expected: 5...	PASSED


TEST 6 STARTED
Test Initial Game Initialization

return value: 0, expected: 0...	PASSED
whoseTurn: 2, expected: 0...	PASSED
handCount: 5, expected: 0...	PASSED
discardCount: 5, expected: 10...	PASSED
deckCount: 0, expected: 0...	PASSED
	Next Player Values
handCount: 5, expected: 5...	PASSED


TEST 7 STARTED
Test Initial Game Initialization

return value: 0, expected: 0...	PASSED
whoseTurn: 0, expected: 1...	PASSED
handCount: 5, expected: 0...	PASSED
discardCount: 0, expected: 5...	PASSED
deckCount: 5, expected: 5...	PASSED
	Next Player Values
handCount: 5, expected: 5...	PASSED


TEST 8 STARTED
Test Initial Game Initialization

return value: 0, expected: 0...	PASSED
whoseTurn: 1, expected: 2...	PASSED
handCount: 5, expected: 0...	PASSED
discardCount: 0, expected: 5...	PASSED
deckCount: 5, expected: 5...	PASSED
	Next Player Values
handCount: 5, expected: 5...	PASSED


TEST 9 STARTED
Test Initial Game Initialization

return value: 0, expected: 0...	PASSED
whoseTurn: 2, expected: 0...	PASSED
handCount: 5, expected: 0...	PASSED
discardCount: 0, expected: 5...	PASSED
deckCount: 5, expected: 5...	PASSED
	Next Player Values
handCount: 5, expected: 5...	PASSED


TEST 10 STARTED
Test Initial Game Initialization

return value: 0, expected: 0...	PASSED
whoseTurn: 0, expected: 1...	PASSED
handCount: 5, expected: 0...	PASSED
discardCount: 5, expected: 10...	PASSED
deckCount: 0, expected: 0...	PASSED
	Next Player Values
handCount: 5, expected: 5...	PASSED

cardtest1.c: 


TEST 1 STARTED
Test Initial Game Implementation

return value: 0, expected: 0		PASSED
handCount: 5, expected: 7		FAILED	handCount: 8
deckCount+discardCount: 5, expected: 3	FAILED	handCount: 2


TEST 2 STARTED
Stage Deck From 0 - 5: gold, gold, estate, copper, estate

return value: 0, expected: 0		PASSED
handCount: 5, expected: 7		FAILED	handCount: 8
deckCount+discardCount: 5, expected: 3	FAILED	handCount: 2


TEST 3 STARTED
Stage Deck From 0 - 5: estate, estate, estate, estate, estate

return value: 0, expected: 0		PASSED
handCount: 5, expected: 7		FAILED	handCount: 5
deckCount+discardCount: 5, expected: 3	FAILED	handCount: 5


TEST 4 STARTED
Stage Empty Deck

return value: 0, expected: 0		PASSED
handCount: 5, expected: 7		FAILED	handCount: 5
deckCount+discardCount: 0, expected: -2	FAILED	handCount: 0


TEST 5 STARTED
Stage empty Deck and Discard piles

return value: 0, expected: 0		PASSED
handCount: 5, expected: 7		FAILED	handCount: 5
deckCount+discardCount: 0, expected: -2	FAILED	handCount: 0


TEST 6 STARTED
Stage empty Hand, Deck and Discard piles

return value: 0, expected: 0		PASSED
handCount: 0, expected: 2		FAILED	handCount: -1
deckCount+discardCount: 0, expected: -2	FAILED	handCount: 1

cardtest2.c: 


TEST 1 STARTED
Test Initial Game Implementation

return value: 0, expected: 0		PASSED
handCount: 6, expected: 8		FAILED	handCount: 9
deckCount+discardCount: 5, expected: 2	FAILED	handCount: 1


TEST 2 STARTED
Set deckCount to 0

return value: 0, expected: 0		PASSED
handCount: 6, expected: 8		FAILED	handCount: 5
deckCount+discardCount: 0, expected: -3	FAILED	handCount: 0


TEST 3 STARTED
Set deckCount and discardCount to 0

return value: 0, expected: 0		PASSED
handCount: 6, expected: 8		FAILED	handCount: 5
deckCount+discardCount: 0, expected: -3	FAILED	handCount: 0


TEST 4 STARTED
Set handCount, deckCount and discardCount to 0, then add Smithy to Hand

return value: 0, expected: 0		PASSED
handCount: 1, expected: 3		FAILED	handCount: 0
deckCount+discardCount: 0, expected: -3	FAILED	handCount: 0

cardtest3.c: 


TEST 1 STARTED
Test Initial Game Implementation

return value: 0, expected: 0		PASSED
handCount: 6, expected: 6		PASSED
deckCount+discardCount: 5, expected: 5	FAILED	handCount: 4
numActions: 1, expected: 3		FAILED	numActions: 2


TEST 2 STARTED
Set deckCount to 0

return value: 0, expected: 0		PASSED
handCount: 6, expected: 6		FAILED	handCount: 5
deckCount+discardCount: 0, expected: 0	PASSED
numActions: 1, expected: 3		FAILED	numActions: 2


TEST 3 STARTED
Set deckCount and discardCount to 0

return value: 0, expected: 0		PASSED
handCount: 6, expected: 6		FAILED	handCount: 5
deckCount+discardCount: 0, expected: 0	PASSED
numActions: 1, expected: 3		FAILED	numActions: 2


TEST 4 STARTED
Set handCount, discardCount, and deckCount to 0 then add Village card to Hand

return value: 0, expected: 0		PASSED
handCount: 1, expected: 1		FAILED	handCount: 0
deckCount+discardCount: 0, expected: 0	PASSED
numActions: 1, expected: 3		FAILED	numActions: 2


TEST 5 STARTED
Set handCount, discardCount, and deckCount to 0 then add Village card to Hand

return value: 0, expected: 0		PASSED
handCount: 1, expected: 1		FAILED	handCount: 0
deckCount+discardCount: 0, expected: 0	PASSED
numActions: 1, expected: 3		FAILED	numActions: 2

cardtest4.c: 


TEST 1 STARTED
Test Initial Game Implementation

return value: 0, expected: 0...			PASSED
handCount: 6, expected: 9...			FAILED	handCount: 10
deckCount+discardCount: 5, expected: 2...	FAILED	deckCount + discardCount: 0
numBuys: 1, expected: 2...			PASSED


TEST 2 STARTED
Set deckCount to 0

return value: 0, expected: 0...			PASSED
handCount: 5, expected: 8...			FAILED	handCount: 4
deckCount+discardCount: 0, expected: -3...	FAILED	deckCount + discardCount: 0
numBuys: 1, expected: 2...			PASSED


TEST 3 STARTED
Set deckCount and discardCount to 0

return value: 0, expected: 0...			PASSED
handCount: 5, expected: 8...			FAILED	handCount: 4
deckCount+discardCount: 0, expected: -3...	FAILED	deckCount + discardCount: 0
numBuys: 1, expected: 2...			PASSED


TEST 4 STARTED
Set handCount, discardCount, and deckCount to 0

return value: 0, expected: 0...			PASSED
handCount: 0, expected: 3...			FAILED	handCount: -1
deckCount+discardCount: 0, expected: -3...	FAILED	deckCount + discardCount: 0
numBuys: 1, expected: 2...			FAILED	numBuys: -1

File 'dominion.c'
Lines executed:44.99% of 609
Creating 'dominion.c.gcov'

